@model TCO.TFM.WDMS.ViewModels.ViewModels.HospitalExpenseVM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    @using (Html.BeginForm(null, null, FormMethod.Post, new  
    {  
        id = "EditForm"
        
    }))
    {
        @Html.AntiForgeryToken()
        <div class="col-md-12">
            <div class="card">

                <div class="card-header card-header-primary card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">library_books</i>
                    </div>
                    <h4 class="card-title">Hospital Expense</h4>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.OpdType)
                @Html.HiddenFor(model => model.CreatedDate)              
                @Html.Hidden("buttonName")

                @Html.Hidden("dateIllnessNoticed", Model.DateIllnessNoticed)

                @Html.Hidden("dateRecovery", Model.DateRecovery)

                @Html.Hidden("periodConfinementDateFrom", Model.PeriodConfinementDateFrom)

                @Html.Hidden("periodConfinementDateTo", Model.PeriodConfinementDateTo)

                @Html.Hidden("claimantSufferedIllnessDate", Model.ClaimantSufferedIllnessDate)


                <div class="card-body">
                    <div class="row mt-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ExpenseNumber, "Expense Number:", htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.ExpenseNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.ExpenseNumber, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeName, "Name of Employee:", htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = (ViewBag.UserName) } })
                                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.EmployeeDepartment, "Employee Department:", htmlAttributes: new { @class = "bmd-label-static custom-label" })
                                @Html.DropDownListFor(model => model.EmployeeDepartment, new SelectList(Enumerable.Empty<SelectListItem>()))
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.ClaimYear, "Claim For Year", htmlAttributes: new { @class = "bmd-label-static custom-label" })
                                @Html.DropDownListFor(model => model.ClaimYear, new List<SelectListItem>
                                {
                                    new SelectListItem {Text = "2020", Value = "2020"},
                                    new SelectListItem {Text = "2021", Value = "2021"},
                                    new SelectListItem {Text = "2022", Value = "2022"},
                                    new SelectListItem {Text = "2023", Value = "2023"},
                                    new SelectListItem {Text = "2024", Value = "2024"},
                                    new SelectListItem {Text = "2025", Value = "2025"},
                                    new SelectListItem {Text = "2026", Value = "2026"},
                                    new SelectListItem {Text = "2027", Value = "2027"},
                                    new SelectListItem {Text = "2028", Value = "2028"},
                                    new SelectListItem {Text = "2029", Value = "2029"},
                                    new SelectListItem {Text = "2030", Value = "2030"},
                                    new SelectListItem {Text = "2031", Value = "2031"},

                                }, new { @class = "selectpicker", @data_style = "btn btn-primary" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.TotalAmountClaimed, "Total Amount Claimed:", htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.TotalAmountClaimed, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TotalAmountClaimed, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.DateIllnessNoticed, "Date of Illness Noticed:", htmlAttributes: new { @class = "bmd-label-static custom-label" })
                                @Html.EditorFor(model => model.DateIllnessNoticed, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.DateIllnessNoticed, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.DateRecovery, "Date of Recovery:", htmlAttributes: new { @class = "bmd-label-static custom-label" })
                                @Html.EditorFor(model => model.DateRecovery, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                @Html.ValidationMessageFor(model => model.DateRecovery, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.Diagnosis, "Diagnosis:", htmlAttributes: new { @class = "bmd-label-static custom-label" })
                                @Html.TextAreaFor(model => model.Diagnosis, 2, 40, new { @class = "form-control custom-textarea" })
                                @Html.ValidationMessageFor(model => model.Diagnosis, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.HospitalName, "Name of Hospital:", htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.HospitalName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.HospitalName, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DoctorName, "Name of Doctor:", htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.DoctorName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DoctorName, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.PeriodConfinementDateFrom, "Period of Confinement From:", htmlAttributes: new { @class = "bmd-label-static custom-label" })
                                @Html.EditorFor(model => model.PeriodConfinementDateFrom, new { htmlAttributes = new { @class = "datepicker form-control" } })
                                @Html.ValidationMessageFor(model => model.PeriodConfinementDateFrom, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.PeriodConfinementDateTo, "Period of Confinement To:", htmlAttributes: new { @class = "bmd-label-static custom-label" })
                                @Html.EditorFor(model => model.PeriodConfinementDateTo, new { htmlAttributes = new { @class = "datepicker form-control" } })
                                @Html.ValidationMessageFor(model => model.PeriodConfinementDateTo, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.ClaimantSufferedIllness, "The Claimant Suffered from Illness Before?", htmlAttributes: new { @class = "bmd-label-static custom-label" })
                                @Html.EditorFor(model => model.ClaimantSufferedIllness, new { htmlAttributes = new { @class = "selectpicker", @data_style = "btn btn-primary" } })
                                @Html.ValidationMessageFor(model => model.ClaimantSufferedIllness, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.ClaimantSufferedIllnessDate, "The Illness Date:", htmlAttributes: new { @class = "bmd-label-floating custom-label" })
                                @Html.EditorFor(model => model.ClaimantSufferedIllnessDate, new { htmlAttributes = new { @class = "datepicker form-control" } })
                                @Html.ValidationMessageFor(model => model.ClaimantSufferedIllnessDate, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.ClaimantSufferedIllnessDetails, "The Illness Details:", htmlAttributes: new { @class = "label-control" })
                                @Html.TextAreaFor(model => model.ClaimantSufferedIllnessDetails, 2, 40, new { @class = "form-control custom-textarea" })
                                @Html.ValidationMessageFor(model => model.ClaimantSufferedIllnessDetails, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.DrugsPrescribedBool, "Drugs Prescribed:", htmlAttributes: new { @class = "bmd-label-static custom-label" })
                                @Html.EditorFor(model => model.DrugsPrescribedBool, new { htmlAttributes = new { @class = "selectpicker", @data_style = "btn btn-primary" } })
                                @Html.ValidationMessageFor(model => model.DrugsPrescribedBool, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group bmd-form-group">
                                @Html.LabelFor(model => model.DrugsPrescribedDescription, "Drugs Description:")
                                @Html.TextAreaFor(model => model.DrugsPrescribedDescription, 2, 40, new { @class = "form-control custom-textarea" })
                                @Html.ValidationMessageFor(model => model.DrugsPrescribedDescription, "", new { @class = "error" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.TextBoxFor(model => model.Status, new { @readonly = "readonly", @class = "form-control" })
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group bmd-form-group is-filled custom-form-group">
                                @Html.LabelFor(model => model.EmployeeName, "Remaining Amount", htmlAttributes: new { @class = "bmd-label-floating" })
                                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = (ViewBag.RemainingAmount) } })

                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer ml-auto mr-auto">
                    <button type="submit" class="btn btn-primary" value="save" name="button">Save</button>
                    <button type="submit" class="btn btn-primary" value="submit" name="button" onclick="Validate(this, event);">Submit</button>
                </div>
            </div>
        </div>
    }
    @Html.Partial("~/Views/HospitalExpense/_HOSPatientReceiptImagesEdit.cshtml", Model)
    <div class="col-md-12">
        <div>
            @Html.ActionLink("Back to List", "Index", "OpdExpense")
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script type="text/javascript">
jQuery(function () {
    var regionsSelect = $('#EmployeeDepartment');
    $.getJSON('@Url.Action("GetDepartments", "Helper")', function (regions) {
        if (regions != null && !jQuery.isEmptyObject(regions)) {
            $.each(regions, function (index, region) {
                regionsSelect.append($("<option></option>").val(this.Value).html(this.Text));
            });
        };
        if (regionsSelect.length != 0) {
            $("#EmployeeDepartment").val('@ViewBag.EmployeeDepartment');
            regionsSelect.selectpicker();
        }
    });
      
    
    $('#PeriodConfinementDateFrom').data("DateTimePicker").date(new Date($('input#periodConfinementDateFrom').val()));

    $('#PeriodConfinementDateTo').data("DateTimePicker").date(new Date($('input#periodConfinementDateTo').val()));

    $('#DateRecovery').data("DateTimePicker").date(new Date($('input#dateRecovery').val()));

    $('#ClaimantSufferedIllnessDate').data("DateTimePicker").date(new Date($('input#claimantSufferedIllnessDate').val()));

    $('#DateIllnessNoticed').data("DateTimePicker").date(new Date($('input#dateIllnessNoticed').val()));
    
});

        function Validate(ctl, event) {
            event.preventDefault();
            document.getElementById("buttonName").value = ctl.value;
            md.initShowSwal('warning-message-and-edit', 'OpdExpense',@ViewData["OPDEXPENSE_ID"],ctl,"You will not be able to make changes in this Hospital Claim!","You still can make changes to this Hospital Claim");
        }
   
       $(function () {              
                    $("#ID").val(@ViewData["OPDEXPENSE_ID"]);                
         });
    </script>
}